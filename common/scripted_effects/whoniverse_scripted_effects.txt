# UNIT Start primary pop creation
whoniverse_generate_unit_pops = {
    if = {
        limit = { owner = { has_origin = origin_whoniverse_unit } }
		
		every_owned_pop = {
			save_event_target_as = unit_starting_pop
		}

		create_species = {
			name = PRESCRIPTED_species_name_whoniverse_human
			plural = PRESCRIPTED_species_plural_whoniverse_human
			class = "HUM"
			portrait = "whoniverse_church"
			homeworld = THIS
				traits = {
					trait = "trait_adaptive"
					trait = "trait_nomadic"
					trait = "trait_wasteful"
				}
			effect = {
				save_event_target_as = whoniverse_human_species
				set_species_flag = unit_starting_pop
			}
		}
		modify_species = {
			species = event_target:whoniverse_human_species
			portrait = whoniverse_unit
			effect = {
				save_event_target_as = unit_species
				set_species_flag = unit_species
				}
			}

		## MAIN ##
		while = {
			count = 28
			create_pop = {
				species = event_target:unit_species
				ethos = random
			}
		}

        ## CLEAR ##
		every_owned_pop = {
			limit = { NOT = { species = { has_species_flag = unit_starting_pop } } }
			kill_pop = yes
		}
	}
}

# Cybermen Start primary and secondary pop creation
whoniverse_generate_cybermen_pops = {
    if = {
        limit = { owner = { has_whoniverse_cyber_conversion = yes } }
      
        ## CLEAR ##
        while = {
            limit = { num_pops > 1 }
            random_owned_pop = {
                kill_pop = yes
            }
        }
      
        ## MAIN ##
        while = {
            count = 12
            create_pop = {
                species = owner_main_species
                ethos = random
            }
        }         

        ## UPGRADED HUMAN ##
        last_created_species = { set_species_flag = upgraded_species@root.owner }         
        while = {
            count = 20
            create_pop = {
                species = last_created_species
                ethos = random
                }
        } 
    }
}

# Cybermen assimilation effect
whoniverse_cybermen_assimilation_effect = {
	random_owned_pop = {
		limit = {
			has_citizenship_type = {
				type = citizenship_whoniverse_cyber_conversion
				country = root.owner
			}
		}
		kill_pop = yes
		root = {
			create_pop = {
				species = root.owner
				ethos = root.owner
			}
			owner = {
				if = {
					limit = { has_ascension_perk = ap_become_the_crisis }
					complete_crisis_objective = crisobj_purge_pops
				}
			}
		}
	}
}

# The Silence Origin - Church of the Papal Mainframe Setup

whoniverse_church_home_planet_setup = {
	optimize_memory
	set_planet_flag = habitat_level_2
	owner = {
		save_event_target_as = whoniverse_church_owner
	}
	solar_system = {
		random_system_planet = {
			limit = { has_planet_flag = whoniverse_church_habitat_1_planet }
			save_event_target_as = whoniverse_church_habitat_1_planet
		}
		spawn_megastructure = {
			type = "major_orbital"
			planet = event_target:whoniverse_church_habitat_1_planet
			coords_from = event_target:whoniverse_church_habitat_1_planet
			owner = event_target:whoniverse_church_owner
			graphical_culture = event_target:whoniverse_church_owner
		}
		random_system_planet = {
			limit = { has_planet_flag = whoniverse_church_habitat_2_planet }
			save_event_target_as = whoniverse_church_habitat_2_planet
		}
		spawn_megastructure = {
			type = "major_orbital"
			planet = event_target:whoniverse_church_habitat_2_planet
			coords_from = event_target:whoniverse_church_habitat_2_planet
			owner = event_target:whoniverse_church_owner
			graphical_culture = event_target:whoniverse_church_owner
		}
		random_system_planet = {
			limit = { has_planet_flag = whoniverse_church_habitat_3_planet }
			save_event_target_as = whoniverse_church_habitat_3_planet
		}
		spawn_megastructure = {
			type = "major_orbital"
			planet = event_target:whoniverse_church_habitat_3_planet
			coords_from = event_target:whoniverse_church_habitat_3_planet
			owner = event_target:whoniverse_church_owner
			graphical_culture = event_target:whoniverse_church_owner
		}
		every_system_planet = {
			limit = { has_planet_flag = mining_planet }
			create_mining_station = { owner = event_target:whoniverse_church_owner }
		}
	}
	event_target:whoniverse_church_habitat_1_planet = {
		set_planet_flag = habitat@PREV
	}
	owner = {
		# give_starting_resources_effect = yes
		give_technology = {
			tech = tech_habitat_1
			message = no
		}
		add_research_option = tech_habitat_2

		give_technology = {
			tech = tech_whoniverse_church_habitats
			message = no
		}

		if = {
			limit = {
				OR = {
					AND = {
						is_lithoid_empire = no
						is_mechanical_species = no
					}
					is_catalytic_empire = yes
				}
			}
			give_technology = {
				tech = tech_eco_simulation
				message = no
			}
			give_technology = {
				tech = tech_hydroponics
				message = no
			}
			root.solar_system.starbase = {
				remove_starbase_building = {
					slot = 1
				}
				set_starbase_building = {
					slot = 1
					building = hydroponics_bay
				}
			}
		}
		else = {
			give_technology = {
				tech = tech_powered_exoskeletons
				message = no
			}
			give_technology = {
				tech = tech_space_mining_1
				message = no
			}

		}
		if = {
			limit = {
				has_valid_civic = civic_private_healthcare_corporate
			}
			give_technology = { message = no tech = tech_frontier_health }
			add_research_option = tech_subdermal_stimulation
		}
	}

	if = {
        limit = { owner = { has_origin = origin_whoniverse_church } }
      
        ## CLEAR ##
        while = {
            limit = { num_pops > 1 }
            random_owned_pop = {
                kill_pop = yes
            }
        }
      
        ## MAIN ##
        while = {
            count = 10
            create_pop = {
                species = owner_main_species
                ethos = random
            }
        }         

        ## SILENCE ##
        last_created_species = { set_species_flag = upgraded_species@root.owner }         
        while = {
            count = 4
            create_pop = {
                species = last_created_species
                ethos = random
                }
        }
    }

	if = {
		limit = {
			owner = {
				has_valid_civic = civic_permanent_employment
			}
		}
		while = {
			count = 4
			random_owned_pop = {
				limit = {
					OR = {
						has_job = clerk
						has_job = technician
						has_job = miner
						has_job = farmer
					}
					is_robotic_species = no
				}
				modify_species = {
					species = this
					add_trait = trait_zombie
					add_traits_at_start_of_list = yes
				}
				if = {
					limit = {
						has_trait = trait_syncretic_proles
					}
					modify_species = {
						species = this
						remove_trait = trait_syncretic_proles
					}
				}
			}
		}
	}

	set_planet_entity = {
		entity = "habitat_phase_03_entity"
		graphical_culture = owner
	}
	set_planet_size = 10
	add_deposit = d_arcane_replicator
	while = {
		count = 2
		add_district = {
			district_type = district_hab_housing
			ignore_cap = yes
		}
	}
	add_district = {
		district_type = district_hab_industrial
		ignore_cap = yes
	}
	while = {
		count = 2
		add_district = {
			district_type = district_hab_mining
			ignore_cap = yes
		}
	}
	add_district = {
		district_type = district_hab_energy
		ignore_cap = yes
	}
	add_building = building_hab_major_capital
	if = {
		limit = {
			owner = {
				is_eager_explorer_empire = no
			}
		}
		add_district = {
			district_type = district_hab_science
			ignore_cap = yes
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					AND = {
						is_lithoid_empire = no
						is_mechanical_species = no
					}
					is_catalytic_empire = yes
					has_country_flag = non_lithoid_subspecies
				}
			}
		}
		add_building = building_hydroponics_farm
	}
	#Tactical Cogitators
	if = {
		limit = {
			owner = {
				has_valid_civic = civic_machine_tactical_algorithms
			}
		}
		owner = {
			give_technology = {
				tech = tech_centralized_command
				message = no
			}
		}
		add_building = building_military_academy
	}
	if = {
		limit = {
			owner = {
				is_gestalt = no
			}
		}
		# Unity Building - Admin/Sacrificial Temple/Temple
		if = {
			limit = {
				owner = {
					is_spiritualist = no
				}
			}
			add_building = building_bureaucratic_1
		}
		if = {
			limit = {
				owner = {
					is_spiritualist = yes
					OR = {
						has_valid_civic = civic_death_cult
						has_valid_civic = civic_death_cult_corporate
					}
				}
			}
			add_building = building_sacrificial_temple_1
		}
		if = {
			limit = {
				owner = {
					is_spiritualist = yes
					NOR = {
						has_valid_civic = civic_death_cult
						has_valid_civic = civic_death_cult_corporate
					}
				}
			}
			add_building = building_temple
		}

		# Amenity Building - Holo-Theatres/Clinc/Sacrificial Temple/Temple/Commercial Zone
		if = {
			limit = {
				owner = {
					is_spiritualist = no
					is_pleasure_seeker = yes
				}
			}
			add_building = building_holo_theatres
		}
		#Aug Bazaar
		else_if = {
			limit = {
				owner = {
					has_valid_civic = civic_augmentation_bazaars
				}
				free_building_slots > 0
			}
			add_building = building_augmentation_bazaars
		}
		# Pharma State
		else_if = {
			limit = {
				owner = {
					has_valid_civic = civic_private_healthcare_corporate
				}
			}
			add_building = building_clinic
		}
		else_if = {
			limit = {
				owner = {
					is_spiritualist = yes
					OR = {
						has_valid_civic = civic_death_cult
						has_valid_civic = civic_death_cult_corporate
					}
				}
			}
			add_building = building_sacrificial_temple_1
		}
		else_if = {
			limit = {
				owner = {
					is_megacorp = no
					is_spiritualist = yes
				}
			}
			add_building = building_temple
		}
		else = {
			add_building = building_commercial_zone
		}

		# Permanent Employment
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_permanent_employment
				}
				free_building_slots > 0
			}
			add_building = building_posthumous_employment_center
		}

		# Relentless Industrialists
		if = {
			limit = {
				owner = {
					is_relentless_industrialist_empire = yes
				}
				free_building_slots > 0
			}
			add_building = building_coordinated_fulfillment_center_1
		}
		if = {
			limit = {
				owner = { is_individual_machine = yes }
			}
		add_building = building_machine_assembly_plant
		}
	}
	else_if = {
		limit = {
			owner = {
				is_hive_empire = yes
			}
		}
		add_building = building_hive_node
		add_building = building_spawning_pool
	}
	else = {
		add_building = building_machine_assembly_plant
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_building = building_organic_sanctuary
		}
		else = {
			add_building = building_uplink_node
		}
	}
}

# Dalek Empire Remnants Origin - Church of the Papal Mainframe Setup

whoniverse_dalek_empire_remnants_home_planet_setup = {
	optimize_memory
	set_planet_flag = habitat_level_2
	owner = {
		save_event_target_as = whoniverse_dalek_empire_remnants_owner
	}
	solar_system = {
		random_system_planet = {
			limit = { has_planet_flag = dalek_empire_remnants_habitat_1_planet }
			save_event_target_as = dalek_empire_remnants_habitat_1_planet
		}
		spawn_megastructure = {
			type = "major_orbital"
			planet = event_target:dalek_empire_remnants_habitat_1_planet
			coords_from = event_target:dalek_empire_remnants_habitat_1_planet
			owner = event_target:whoniverse_dalek_empire_remnants_owner
			graphical_culture = event_target:whoniverse_dalek_empire_remnants_owner
		}
		random_system_planet = {
			limit = { has_planet_flag = dalek_empire_remnants_habitat_2_planet }
			save_event_target_as = dalek_empire_remnants_habitat_2_planet
		}
		spawn_megastructure = {
			type = "major_orbital"
			planet = event_target:dalek_empire_remnants_habitat_2_planet
			coords_from = event_target:dalek_empire_remnants_habitat_2_planet
			owner = event_target:whoniverse_dalek_empire_remnants_owner
			graphical_culture = event_target:whoniverse_dalek_empire_remnants_owner
		}
		random_system_planet = {
			limit = { has_planet_flag = dalek_empire_remnants_habitat_3_planet }
			save_event_target_as = dalek_empire_remnants_habitat_3_planet
		}
		spawn_megastructure = {
			type = "major_orbital"
			planet = event_target:dalek_empire_remnants_habitat_3_planet
			coords_from = event_target:dalek_empire_remnants_habitat_3_planet
			owner = event_target:whoniverse_dalek_empire_remnants_owner
			graphical_culture = event_target:whoniverse_dalek_empire_remnants_owner
		}
	}
	event_target:dalek_empire_remnants_habitat_1_planet = {
		set_planet_flag = habitat@PREV
	}
	owner = {
		# give_starting_resources_effect = yes
		# give_technology = {
		# 	tech = tech_habitat_1
		# 	message = no
		# }
		# add_research_option = tech_habitat_2

		# give_technology = {
		# 	tech = tech_whoniverse_church_habitats
		# 	message = no
		# }

		if = {
			limit = {
				OR = {
					AND = {
						is_lithoid_empire = no
						is_mechanical_species = no
					}
					is_catalytic_empire = yes
				}
			}
			give_technology = {
				tech = tech_eco_simulation
				message = no
			}
			give_technology = {
				tech = tech_hydroponics
				message = no
			}
			root.solar_system.starbase = {
				remove_starbase_building = {
					slot = 1
				}
				set_starbase_building = {
					slot = 1
					building = hydroponics_bay
				}
			}
		}
		else = {
			give_technology = {
				tech = tech_powered_exoskeletons
				message = no
			}
			give_technology = {
				tech = tech_space_mining_1
				message = no
			}

		}
		if = {
			limit = {
				has_valid_civic = civic_private_healthcare_corporate
			}
			give_technology = { message = no tech = tech_frontier_health }
			add_research_option = tech_subdermal_stimulation
		}
	}

    while = {
        limit = { num_pops > 1 }
        random_owned_pop = {
            kill_pop = yes
        }
    }
      
    ## MAIN ##
    while = {
        count = 20
        create_pop = {
            species = owner_main_species
            ethos = random
        }
    }         

	if = {
		limit = {
			owner = {
				has_valid_civic = civic_permanent_employment
			}
		}
		while = {
			count = 4
			random_owned_pop = {
				limit = {
					OR = {
						has_job = clerk
						has_job = technician
						has_job = miner
						has_job = farmer
					}
					is_robotic_species = no
				}
				modify_species = {
					species = this
					add_trait = trait_zombie
					add_traits_at_start_of_list = yes
				}
				if = {
					limit = {
						has_trait = trait_syncretic_proles
					}
					modify_species = {
						species = this
						remove_trait = trait_syncretic_proles
					}
				}
			}
		}
	}

	set_planet_entity = {
		entity = "habitat_phase_03_entity"
		graphical_culture = owner
	}
	set_planet_size = 10
	add_deposit = d_arcane_replicator
	while = {
		count = 2
		add_district = {
			district_type = district_hab_housing
			ignore_cap = yes
		}
	}
	add_district = {
		district_type = district_hab_industrial
		ignore_cap = yes
	}
	while = {
		count = 2
		add_district = {
			district_type = district_hab_mining
			ignore_cap = yes
		}
	}
	add_district = {
		district_type = district_hab_energy
		ignore_cap = yes
	}
	add_building = building_hab_major_capital
	if = {
		limit = {
			owner = {
				is_eager_explorer_empire = no
			}
		}
		add_district = {
			district_type = district_hab_science
			ignore_cap = yes
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					AND = {
						is_lithoid_empire = no
						is_mechanical_species = no
					}
					is_catalytic_empire = yes
					has_country_flag = non_lithoid_subspecies
				}
			}
		}
		add_building = building_hydroponics_farm
	}
	#Tactical Cogitators
	if = {
		limit = {
			owner = {
				has_valid_civic = civic_machine_tactical_algorithms
			}
		}
		owner = {
			give_technology = {
				tech = tech_centralized_command
				message = no
			}
		}
		add_building = building_military_academy
	}
	if = {
		limit = {
			owner = {
				is_gestalt = no
			}
		}
		# Unity Building - Admin/Sacrificial Temple/Temple
		if = {
			limit = {
				owner = {
					is_spiritualist = no
				}
			}
			add_building = building_bureaucratic_1
		}
		if = {
			limit = {
				owner = {
					is_spiritualist = yes
					OR = {
						has_valid_civic = civic_death_cult
						has_valid_civic = civic_death_cult_corporate
					}
				}
			}
			add_building = building_sacrificial_temple_1
		}
		if = {
			limit = {
				owner = {
					is_spiritualist = yes
					NOR = {
						has_valid_civic = civic_death_cult
						has_valid_civic = civic_death_cult_corporate
					}
				}
			}
			add_building = building_temple
		}

		# Amenity Building - Holo-Theatres/Clinc/Sacrificial Temple/Temple/Commercial Zone
		if = {
			limit = {
				owner = {
					is_spiritualist = no
					is_pleasure_seeker = yes
				}
			}
			add_building = building_holo_theatres
		}
		#Aug Bazaar
		else_if = {
			limit = {
				owner = {
					has_valid_civic = civic_augmentation_bazaars
				}
				free_building_slots > 0
			}
			add_building = building_augmentation_bazaars
		}
		# Pharma State
		else_if = {
			limit = {
				owner = {
					has_valid_civic = civic_private_healthcare_corporate
				}
			}
			add_building = building_clinic
		}
		else_if = {
			limit = {
				owner = {
					is_spiritualist = yes
					OR = {
						has_valid_civic = civic_death_cult
						has_valid_civic = civic_death_cult_corporate
					}
				}
			}
			add_building = building_sacrificial_temple_1
		}
		else_if = {
			limit = {
				owner = {
					is_megacorp = no
					is_spiritualist = yes
				}
			}
			add_building = building_temple
		}
		else = {
			add_building = building_commercial_zone
		}

		# Permanent Employment
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_permanent_employment
				}
				free_building_slots > 0
			}
			add_building = building_posthumous_employment_center
		}

		# Relentless Industrialists
		if = {
			limit = {
				owner = {
					is_relentless_industrialist_empire = yes
				}
				free_building_slots > 0
			}
			add_building = building_coordinated_fulfillment_center_1
		}
		if = {
			limit = {
				owner = { is_individual_machine = yes }
			}
		add_building = building_machine_assembly_plant
		}
	}
	else_if = {
		limit = {
			owner = {
				is_hive_empire = yes
			}
		}
		add_building = building_hive_node
		add_building = building_spawning_pool
	}
	else = {
		add_building = building_machine_assembly_plant
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor
				}
			}
			add_building = building_organic_sanctuary
		}
		else = {
			add_building = building_uplink_node
		}
	}
}
